apply plugin: 'com.android.library'

android {
	namespace "dev.simulant.simulant"
    ndkVersion '25.2.9519653'
    compileSdkVersion 32

    buildFeatures {
        prefabPublishing true
    }

    prefab {
        simulant {
            headers "$buildDir/headers"
        }
    }

    packagingOptions {
        exclude("**/libsimulant.so")
        exclude("**/libc++_shared.so")
    }

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 28

        ndk {
		    def ABI_FILTERS = System.getenv("ABI_FILTERS") ?: "x86;x86_64;armeabi-v7a;arm64-v8a"
		    abiFilters = []
		    abiFilters.addAll("${ABI_FILTERS}".split(';').collect{it as String})
        }
    }

	externalNativeBuild {
		cmake {
			path "../../CMakeLists.txt"
		}
	}

	sourceSets {
		main {
		    manifest.srcFile './AndroidManifest.xml'
		    res.srcDirs = ['../../platforms/android/res']
	    }
	}

	buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'

            externalNativeBuild{
                cmake{
                    arguments "-DCMAKE_BUILD_TYPE=Release" "-DANDROID_STL=c++_shared"
                }
            }
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'

            externalNativeBuild{
                cmake{
                    arguments "-DCMAKE_BUILD_TYPE=Debug" "-DANDROID_STL=c++_shared"
                }
            }
        }
    }
}

task mkHeadersDirs {
    mkdir "$buildDir/headers"
    mkdir "$buildDir/headers/simulant"
}

task extractHeaders(type: Copy) {
    from('../../simulant')
    into("$buildDir/headers/simulant")
    include('**/*.h')
}

extractHeaders.dependsOn mkHeadersDirs
preBuild.dependsOn extractHeaders

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

